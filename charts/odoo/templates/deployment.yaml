apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.resources.namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-file-credentials
  namespace: {{ .Values.resources.namespace }}
type: Opaque
stringData:
  azurestorageaccountname: {{ quote .Values.resources.storageAccount.name }}
  azurestorageaccountkey: {{ quote .Values.resources.storageAccount.key }}
---
#################################
#           Postgres            #
#################################
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.persistentVolume.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  capacity:
    storage: {{ .Values.environment.postgres.persistentVolume.storageCapacity }}
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi-premium
  csi:
    driver: file.csi.azure.com
    volumeHandle: "{{- printf "%s#%s#%s###%s" .Values.resources.groupName .Values.resources.storageAccount.name .Values.environment.postgres.persistentVolume.nfsFileShareName .Values.resources.namespace -}}"
    volumeAttributes:
      protocol: nfs
      storageAccount: {{ .Values.resources.storageAccount.name }}
      shareName: {{ .Values.environment.postgres.persistentVolume.nfsFileShareName }}
      server: {{ .Values.resources.storageAccount.name }}.file.core.windows.net
    nodeStageSecretRef:
      name: azure-file-credentials
      namespace: {{ .Values.resources.namespace }}
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.persistentVolumeClaim.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.environment.postgres.persistentVolume.storageCapacity }} # Use the same storage capacity from the PV
  volumeName: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.persistentVolume.name }}
  storageClassName: azurefile-csi-premium
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.deployment.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  replicas: {{ .Values.environment.postgres.deployment.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: {{ .Values.environment.postgres.deployment.container.name }}
        image: {{ .Values.environment.postgres.deployment.container.imageName }}:{{ .Values.environment.postgres.deployment.container.imageTag }}
        resources:
          limits:
            memory: {{ .Values.environment.postgres.deployment.container.limits.memory }}
            cpu: {{ .Values.environment.postgres.deployment.container.limits.cpu }}
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            value: {{ .Values.environment.postgres.deployment.container.variables.postgresUser }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.environment.postgres.deployment.container.variables.postgresPassword }}
          - name: PGDATA
            value: {{ .Values.environment.postgres.deployment.container.variables.postgresDataDirectory }}/{{ .Values.environment.prefix }}/
        {{{{- if .Values.environment.odoo.deployment.container.isPrivateRepository -}}
        imagePullSecrets:
          - name: {{ .Values.environment.postgres.deployment.container.imagePullSecrets }}
        {{- end -}}}}
        volumeMounts:
        - mountPath: "/var/lib/postgresql"
          name: postgres-data-v
          readOnly: false
      volumes:
      - name: postgres-data-v
        persistentVolumeClaim:
          claimName: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.persistentVolumeClaim.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.service.name }}
  namespace: {{ .Values.resources.namespace }}
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
  - port: {{ .Values.environment.postgres.service.port }}
    targetPort: 5432
---
#################################
#             Odoo              #
#################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.configMap.name }}
  namespace: {{ .Values.resources.namespace }}
data:
  odoo.conf: |
    [options]
    db_name = {{ .Values.environment.prefix }}
    db_sslmode = disable
    dbfilter = 
    list_db = False
    db_template = template1
    addons_path = /mnt/extra-addons
    data_dir = /var/lib/odoo/{{ .Values.environment.prefix | trim }}
    
    # Connection options
    workers = 3
    max_cron_threads = 2
    limit_memory_hard = 2684354560
    limit_memory_soft = 2147483648
    limit_request = 8192
    limit_time_cpu = 240
    limit_time_real = 240
    limit_time_real_cron = -1
    gevent_port = 8072

    # Demo Data options
    without_demo = all

    # HTTP options
    proxy_mode = True
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.persistentVolume.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  capacity:
    storage: {{ .Values.environment.odoo.persistentVolume.storageCapacity }}
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi-premium
  csi:
    driver: file.csi.azure.com
    volumeHandle: "{{- printf "%s#%s#%s###%s" .Values.resources.groupName .Values.resources.storageAccount.name .Values.environment.odoo.persistentVolume.nfsFileShareName .Values.resources.namespace -}}"
    volumeAttributes:
      protocol: nfs
      storageAccount: {{ .Values.resources.storageAccount.name }}
      shareName: {{ .Values.environment.odoo.persistentVolume.nfsFileShareName }}
      server: {{ .Values.resources.storageAccount.name }}.file.core.windows.net
    nodeStageSecretRef:
      name: azure-file-credentials
      namespace: {{ .Values.resources.namespace }}
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.persistentVolumeClaim.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.environment.odoo.persistentVolume.storageCapacity }}
  volumeName: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.persistentVolume.name }}
  storageClassName: azurefile-csi-premium
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.deployment.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  replicas: {{ .Values.environment.odoo.deployment.replicas }}
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      containers:
      - name: {{ .Values.environment.odoo.deployment.container.name }}
        image: {{ .Values.environment.odoo.deployment.container.imageName }}:{{ .Values.environment.odoo.deployment.container.imageTag }}
        resources:
          limits:
            memory: {{ .Values.environment.odoo.deployment.container.limits.memory }}
            cpu: {{ .Values.environment.odoo.deployment.container.limits.cpu }}
        ports:
        - containerPort: 8069
        env:
          - name: HOST
            value: {{ .Values.environment.prefix }}-{{ .Values.environment.postgres.service.name }}
          - name: PORT
            value: {{ quote .Values.environment.postgres.service.port }}
          - name: USER
            value: {{ .Values.environment.postgres.deployment.container.variables.postgresUser }}
          - name: PASSWORD
            value: {{ .Values.environment.postgres.deployment.container.variables.postgresPassword }}
          - name: DATABASE_NAME
            value: {{ .Values.environment.prefix }}
        volumeMounts:
          - mountPath: "/var/lib/odoo"
            name: odoo-data-v
            readOnly: false
          - mountPath: "/etc/odoo/"
            name: odoo-config-v
            readOnly: false
      {{{{- if .Values.environment.odoo.deployment.container.isPrivateRepository -}}
      imagePullSecrets:
        - name: {{ .Values.environment.odoo.deployment.container.imagePullSecrets }}
      {{- end -}}}}
      volumes:
        - name: odoo-data-v
          persistentVolumeClaim:
            claimName: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.persistentVolumeClaim.name }}
        - name: odoo-config-v
          configMap:
            name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.configMap.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.service.name }}
  namespace: {{ .Values.resources.namespace }}
spec:
  type: ClusterIP
  selector:
    app: odoo
  ports:
  - name: http-port
    port: {{ .Values.environment.odoo.service.port }}
    targetPort: 8069
  - name: gevent-port
    port: {{ .Values.environment.odoo.service.geventPort }}
    targetPort: 8072
---
#################################
#       Ingress resource       #
#################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.environment.prefix }}-{{ .Values.environment.odoo.ingress.name }}
  namespace: {{ .Values.resources.namespace }}
  labels:
    app: odoo
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  ingressClassName: {{ .Values.environment.odoo.ingress.className }}
  tls:
    - hosts:
        - {{ .Values.environment.odoo.ingress.host }}
      secretName: {{ .Values.environment.odoo.ingress.tls.secretName }}
  rules:
    - host: {{ .Values.environment.odoo.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: 
                name: {{ .Values.environment.odoo.service.name }}
                port:
                  number: {{ .Values.environment.odoo.service.port }}
          - path: /websocket
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.environment.odoo.service.name }}
                port:
                  number: {{ .Values.environment.odoo.service.geventPort }}